% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_classification.R
\name{sits_classify.raster_cube}
\alias{sits_classify.raster_cube}
\title{Classify a data cube using multicore machines}
\usage{
\method{sits_classify}{raster_cube}(
  data,
  ml_model,
  ...,
  roi = NULL,
  filter = NULL,
  impute_fn = sits_impute_linear(),
  memsize = 8,
  multicores = 2,
  output_dir = "./",
  version = "v1",
  .verbose = FALSE
)
}
\arguments{
\item{data}{data cube}

\item{ml_model}{R model trained by \code{\link[sits]{sits_train}}.}

\item{...}{other parameters to be passed to specific functions}

\item{roi}{a region of interest (see above)}

\item{filter}{smoothing filter to be applied (if desired).}

\item{impute_fn}{impute function to replace NA}

\item{memsize}{memory available for classification (in GB).}

\item{multicores}{number of cores to be used for classification.}

\item{output_dir}{directory for output file}

\item{version}{version of the output (for multiple classifications)}

\item{.verbose}{print detailed information on processing steps}
}
\value{
cube with the metadata of a brick of probabilities.
}
\description{
Takes a data cube, whose metadata is
   described by tibble (created by \code{\link[sits]{sits_cube}}),
   a set of samples used for training a classification model,
   a prediction model (created by \code{\link[sits]{sits_train}}),
   and produces a classified set of RasterLayers.

   The "roi" parameter defines a region of interest. It can be
   an sf_object, a shapefile, or a bounding box vector with
   named XY values ("xmin", "xmax", "ymin", "ymax") or
   named lat/long values ("lat_min", "lat_max", "long_min", "long_max")

   The "memsize" and "multicores" parameters define the
   The "multicores" parameter defines the
   number of cores used for processing. The "memsize" parameter  controls
   the amount of memory available for classification.
}
\examples{

\dontrun{
# Classify a raster file with 23 instances for one year
ndvi_file <- c(system.file("extdata/raster/mod13q1/sinop-ndvi-2014.tif",
package = "sits"))

# create a data cube based on the information about the files
sinop_2014 <- sits_cube(
    type = "BRICK",
    name = "sinop-2014",
    timeline = timeline_2013_2014,
    satellite = "TERRA",
    sensor = "MODIS",
    bands = c("ndvi"),
    files = c(ndvi_file)
)

# select band "NDVI"
samples <- sits_select(samples_mt_4bands, bands = "NDVI")

# select a random forest model
rfor_model <- sits_train(samples, ml_method = sits_rfor(num_trees = 300))

# classify the raster image
sinop_probs <- sits_classify(sinop_2014,
    ml_model = rfor_model,
    output_dir = tempdir(),
    memsize = 4, multicores = 1
)

# label the classified image
sinop_label <- sits_label_classification(sinop_probs, output_dir = tempdir())
}
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
