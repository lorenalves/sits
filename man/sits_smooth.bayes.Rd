% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_smooth.R
\name{sits_smooth.bayes}
\alias{sits_smooth.bayes}
\title{Post-process a classified data raster probs using Bayesian smoothing}
\usage{
\method{sits_smooth}{bayes}(
  cube,
  type = "bayes",
  ...,
  window_size = 5,
  smoothness = 20,
  covar = FALSE,
  multicores = 1,
  memsize = 1,
  output_dir = getwd(),
  version = "v1"
)
}
\arguments{
\item{cube}{Probability data cube}

\item{type}{Type of smoothing}

\item{...}{Parameters for specific functions}

\item{window_size}{Size of the neighbourhood.}

\item{smoothness}{Estimated variance of logit of class probabilities
(Bayesian smoothing parameter). It can be either
a matrix or a scalar.}

\item{covar}{a logical argument indicating if a covariance
matrix must be computed as the prior covariance.}

\item{multicores}{Number of process to run the Bayesian smoothing in
snow subprocess.}

\item{memsize}{Maximum overall memory (in GB) to run the Bayesian
smoothing.}

\item{output_dir}{Output directory where to out the file}

\item{version}{Version of resulting image
(in the case of multiple tests)}
}
\value{
A tibble with metadata about the output raster objects.
}
\description{
Takes a set of raster bricks with probabilities,
             whose metadata is created by \code{\link[sits]{sits_cube}},
             and apply a bayesian smoothing process.
             If \code{covar} is \code{FALSE} only main diagonal of
             covariance prior matrix will be computed.
}
\examples{
\dontrun{
# Retrieve the samples for Mato Grosso
# select band "ndvi"

samples_ndvi <- sits_select(samples_mt_4bands, bands = "NDVI")

# select a random forest model
rfor_model <- sits_train(samples_ndvi, sits_rfor(num_trees = 500))

# Classify a raster file with 23 instances for one year
files <- c(system.file("extdata/raster/mod13q1/sinop-crop-ndvi.tif",
    package = "sits"
))

# create a data cube based on the information about the files
sinop <- sits_cube(
    type = "BRICK", satellite = "TERRA",
    sensor = "MODIS", name = "Sinop-crop",
    timeline = timeline_modis_392,
    output_dir = tempdir(),
    bands = c("NDVI"), files = files
)

# classify the raster image
sinop_probs <- sits_classify(sinop,
    ml_model = rfor_model,
    output_dir = tempdir(),
    memsize = 4, multicores = 2
)

# label the classification and smooth the result with a Bayesian filter
sinop_bayes <- sits_smooth(sinop_probs, output_dir = tempdir()
    )
}

}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
